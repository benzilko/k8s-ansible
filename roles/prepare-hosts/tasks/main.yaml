---
- name: Disable firewalld
  service:
    name: firewalld
    state: stopped
    enabled: no
  become: yes

##################################

- name: change too cgroup v2
  ansible.builtin.shell: |
    grubby --update-kernel=ALL --args="systemd.unified_cgroup_hierarchy=1"
  become: yes

- name: load module permanet
  copy:
    src: k8s.conf
    dest: /etc/modules-load.d/k8s.conf
    owner: root
    mode: 644
  become: yes

- name: load module br_netfilter
  community.general.modprobe:
    name: br_netfilter
  become: yes

- name: load module overlay
  community.general.modprobe:
    name: overlay
  become: yes

- name: set sysctl on all nodes
  sysctl:
    name: "{{ item.name }}"
    value: "{{ item.value }}"
    state: present
  with_items:
    - name: net.ipv4.ip_forward
      value: 1
    - name: net.bridge.bridge-nf-call-iptables
      value: 1
    - name: net.bridge.bridge-nf-call-ip6tables
      value: 1
    - name: user.max_user_namespaces
      value: 28633 
  become: yes  

#- name: Set Sysctl on master node(s)
#  when: inventory_hostname in groups['k8s_masters']
#  sysctl:
#    name: "{{ item.name }}"
#    value: "{{ item.value }}"
#    state: present
#  with_items:
#    - name: net.ipv4.ip_nonlocal_bind
#  become: yes

- name: enable system params
  ansible.builtin.shell: |
    sysctl --system
  become: yes

- name: disable selinux
  ansible.builtin.selinux:
    state: disabled
  become: yes

- name: check is swap enable
  ansible.builtin.shell: swapon
  register: swap_present
  changed_when: false
  ignore_errors: true

- name: if swap is enabled - disable it
  ansible.builtin.shell: swapoff -a
  become: yes
  when: swap_present.stdout != ""

- name: disable SWAP in fstab
  replace:
    path: /etc/fstab
    regexp: '^([^#].*\s*swap\s*.*)$'
    replace: '# \1'
  become: yes

- name: add repo kubernetes
  when: ansible_facts['os_family'] == "RedHat"
  ansible.builtin.yum_repository:
    name: kubernetes
    description: Kubernetes YUM repository
    baseurl: https://packages.cloud.google.com/yum/repos/kubernetes-el7-x86_64
    gpgkey:
       - 'https://packages.cloud.google.com/yum/doc/yum-key.gpg'
       - 'https://packages.cloud.google.com/yum/doc/rpm-package-key.gpg'
    gpgcheck: yes
  become: yes

- name: add repo crio
  ansible.builtin.shell: |
    VERSION=1.26
    OS=CentOS_8
    curl -L -o /etc/yum.repos.d/devel:kubic:libcontainers:stable.repo https://download.opensuse.org/repositories/devel:/kubic:/libcontainers:/stable/$OS/devel:/kubic:/libcontainers:/stable.repo
    curl -L -o /etc/yum.repos.d/devel:kubic:libcontainers:stable:cri-o:$VERSION.repo https://download.opensuse.org/repositories/devel:/kubic:/libcontainers:/stable:/cri-o:/$VERSION/$OS/devel:kubic:libcontainers:stable:cri-o:$VERSION.repo
  become: yes

- name: clear dnf chache
  ansible.builtin.shell: |
    rm -rf /var/cache/dnf/*
  become: yes

- name: install packages dnf
  ansible.builtin.dnf:
    name:
      - podman
      - crun
      - cri-o
      - iproute-tc
      - bash-completion
      - jq
      - kubectl-{{ kube_version }}-0.x86_64
      - kubelet-{{ kube_version }}-0.x86_64
      - kubeadm-{{ kube_version }}-0.x86_64
    install_weak_deps: true
    state: present
  become: yes
  when: ansible_facts['os_family'] == "RedHat"

- name: enable crun
  ansible.builtin.shell: |
    sed -i 's/#runtime = "crun"$/runtime = "crun"/g;s/runtime = "runc"$/#runtime = "runc"/g;' \
    /usr/share/containers/containers.conf
  become: yes

- name: create a directory crio.conf.d
  ansible.builtin.file:
    path: /etc/crio/crio.conf.d/
    state: directory
  become: yes

- name: setup crun
  copy:
    src: 10-crun.conf
    dest: /etc/crio/crio.conf.d/10-crun.conf
    owner: root
    mode: 644
  become: yes

- name: enable crio
  ansible.builtin.shell: |
    systemctl enable crio --now
  become: yes

- name: set crictl.yaml
  copy:
    src: crictl.yaml
    dest: /etc/crictl.yaml
    owner: root
    mode: 644
  become: yes

- name: check if runc already exists
  command: runc -v
  register: runc_exists
  ignore_errors: yes

- name: remove runc package
  ansible.builtin.shell: |
    rpm -e --nodeps runc
  when: runc_exists is succeeded
  ignore_errors: true
  become: yes

#################

- name: create a directory k8s
  ansible.builtin.file:
    path: ~/k8s
    state: directory
  when: inventory_hostname == groups['k8s_masters'][0]  

- name: install helm on master node(s)
  ansible.builtin.shell: |
    curl -O -L 'https://get.helm.sh/helm-{{ helm_version}}-linux-amd64.tar.gz' && \
    tar -zxvf helm-{{ helm_version }}-linux-amd64.tar.gz && \
    mv linux-amd64/helm /usr/local/bin
  become: yes
  when: inventory_hostname == groups['k8s_masters'][0]

- name: install helm on master node(s)
  ansible.builtin.shell: |
    pip3 install PyYAML
  become: yes
  when: inventory_hostname == groups['k8s_masters'][0]

#- name: Add PS1
#  lineinfile:
#    path: /root/.bashrc
#    state: present
#    line: "PS1='\\[\\e[44;36m\\]\\t:[\\w]\\[\\e[0;0m\\]\\n\\[\\e[0;31;04m\\]\\u\\[\\e[0;0m\\]@\\[\\e[0;32m\\]\\h\\[\\e[0;0m\\] \\$ '"
